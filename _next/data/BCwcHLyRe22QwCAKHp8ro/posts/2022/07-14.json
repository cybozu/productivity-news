{"pageProps":{"post":{"title":"#4 - 2022.07.14","year":"2022","slug":"07-14","content":"<h2><a href=\"https://github.com/actions/setup-go/releases/tag/v3.2.0\">actions/setup-go アクションが単体でのキャッシュに対応</a></h2>\n<p>共有担当: <a href=\"https://github.com/korosuke613\">@korosuke613</a></p>\n<ul>\n<li>GitHub Actions において公式アクションである actions/setup-go が単体でのキャッシュに対応しました</li>\n<li>actions/setup-go@v3.2.0 から利用可能</li>\n<li><code>with.cache</code> を <code>true</code> にすることで有効になります</li>\n<li><code>with.cache-dependency-path</code> に go.sum のパスを与えることでモノレポでも利用可能</li>\n<li>便利</li>\n</ul>\n<h2><a href=\"https://event.shoeisha.jp/devsumi/20220721\">Developers Summit 2022 Summer が 2022.07.21 に開催</a></h2>\n<p>共有担当: <a href=\"https://github.com/korosuke613\">@korosuke613</a></p>\n<ul>\n<li>Developers Summit 2022 Summer が 2022/07/21 にオンラインで開催されます（参加費無料）</li>\n<li>テーマは「アジャイル・DevOps時代のプロダクトとエンジニア組織を支える、Developer Productivityへの道」です</li>\n<li>開発生産性上げたい人は必見です</li>\n<li>実は生産性向上チームの平木場が登壇します\n<ul>\n<li><a href=\"https://event.shoeisha.jp/devsumi/20220721/session/3841/\">生産性向上は一筋縄でいかない ～改善を進める上で生じる課題との付き合い方～</a></li>\n<li>よければ見てください</li>\n</ul>\n</li>\n</ul>\n<h2><a href=\"https://zenn.dev/jrsyo/articles/83bbcff7e08ab8\">Terraform 1.3でoptional()によるobject attributes(variable)へのデフォルト値設定が改善</a></h2>\n<p>共有担当: <a href=\"https://twitter.com/ganta0087\">@ganta0087</a></p>\n<ul>\n<li>実験的機能として<code>optional()</code> modifier(v0.14〜)と<code>defaults()</code> function(v0.15〜)が追加されていた。</li>\n<li>この2つを組み合わせて<code>object</code> typeの<code>variable</code>のうち、任意のattributeにデフォルト値を持たせることができたが、かなり冗長な定義になり、直感的にわかりづらいものであった。</li>\n<li>Terraform 1.3では<code>optional()</code> modifierにデフォルト値の設定機能が追加され、シンプルかつ直感的に書けるようになる予定。</li>\n</ul>\n<h2><a href=\"https://zenn.dev/ganta/articles/e1e0746136ce67\">高速で設定しやすいZsh/BashプラグインマネージャーSheldonの紹介</a></h2>\n<p>共有担当: <a href=\"https://twitter.com/ganta0087\">@ganta0087</a></p>\n<ul>\n<li>Rust製で高速に起動するZsh/Bash向けプラグインマネージャー。</li>\n<li>TOML形式のファイルに設定し、設定項目がわかりやすく直感的に書ける。</li>\n</ul>\n<h2><a href=\"https://github.blog/2022-06-21-github-copilot-is-generally-available-to-all-developers/\">GitHub Copilot が GA になりました</a></h2>\n<p>共有担当: <a href=\"https://twitter.com/miyajan\">@miyajan</a></p>\n<ul>\n<li><a href=\"https://github.com/features/copilot/\">GitHub Copilot</a> は、コメントやコードのコンテキストから AI がコードスニペットを提案してくれるサービスです\n<ul>\n<li><a href=\"https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/\">一年ほど前からテクニカルプレビューとして限定公開されていました</a></li>\n</ul>\n</li>\n<li>料金は、無料トライアル 60 日のあとは $10/month か $100/year がかかります\n<ul>\n<li>学生や有名 OSS の開発者は無料</li>\n<li>企業向けのプランは年内を予定</li>\n</ul>\n</li>\n<li>公式 FAQ によると、GitHub Copilot 利用者の手元のコードは GitHub Copilot のサービス側に送られるけど、他の利用者への提案として使用されることはないとのことです</li>\n<li>GitHub Copilot が生成したコードを利用することによる著作権侵害のリスクについては議論があります\n<ul>\n<li><a href=\"https://zenn.dev/miyajan/scraps/3567cee380280c\">自分の調査メモ</a></li>\n<li>GitHub Copilot の生成するコードは創作性が認められて著作権を侵害するリスクがあるのか？</li>\n<li>GitHub Copilot が著作権を侵害するコードを生成する場合、利用者側はそれに気づいて適切な対策をとれるのか？</li>\n</ul>\n</li>\n<li>AWS が同様のサービスとして <a href=\"https://aws.amazon.com/jp/blogs/aws/now-in-preview-amazon-codewhisperer-ml-powered-coding-companion/\">Amazon CodeWhisperer をプレビュー版として公開しました</a>\n<ul>\n<li><a href=\"https://aws.amazon.com/jp/blogs/machine-learning/introducing-amazon-codewhisperer-the-ml-powered-coding-companion/\">公式の紹介記事</a></li>\n<li>プレビュー期間中は無料</li>\n<li>こちらは学習データに OSS だけでなく Amazon 内部のリポジトリなども利用しているとのこと</li>\n<li>JetBrains 製品、VSCode、AWS Cloud9 などから利用可能</li>\n<li>Python、Java、JavaScript をサポート</li>\n<li>学習データに似ているコードスニペットが生成される場合は、利用者にそのコードの元となるリポジトリとそのライセンス情報が通知され、自分のコードに取り込むか判断材料にできる</li>\n<li>ステレオタイプに基づいたバイアスをコードから排除する技術も実装されているとのこと</li>\n</ul>\n</li>\n</ul>\n<h2><a href=\"https://zenn.dev/kesin11/articles/7f4eed7cabf38d\">ちょうどよいビルドツールEarthlyの紹介</a></h2>\n<p>共有担当:<a href=\"https://twitter.com/akihisa1210\">@akihisa1210</a></p>\n<ul>\n<li>OSS のビルドツール Earthly を、Bazel や Gradle などの他のビルドツールと比較して紹介する記事の紹介です。</li>\n<li>Earthly の公式サイトは<a href=\"https://docs.earthly.dev/\">こちら</a>。</li>\n<li>Earthly の特徴（上記の記事 &#x26; 公式サイトより）\n<ul>\n<li>Dockerfile と Makefile を組み合わせたような文法の設定ファイル（Earthfile）を持つ。</li>\n<li>基本的にすべての処理がコンテナ内で実行されるので、再現性が高い。\n<ul>\n<li>ローカルのツールに依存しないので、依存関係も明確になる。</li>\n</ul>\n</li>\n<li>Earthfile 内のターゲットを別の Earthfile から参照できる。\n<ul>\n<li>ネットワーク越しでも参照可能。</li>\n</ul>\n</li>\n<li>キャッシュに Docker のレイヤーキャッシングと同じ考え方が使える。</li>\n</ul>\n</li>\n<li><a href=\"https://docs.earthly.dev/basics\">公式チュートリアル</a>と <a href=\"https://github.com/earthly/earthly/tree/main/examples\">examples</a> もあります。</li>\n</ul>\n<hr>\n<h1>We are hiring</h1>\n<a href=\"https://note.com/cybozu_dev/n/n1c1b44bf72f6\">\n<img src=\"https://user-images.githubusercontent.com/471182/156986297-b189ef3d-98d3-4490-af5c-007a4ab47e5e.png\" alt=\"サイボウズの開発者の生産性を上げる「生産性向上チーム」とは！？\" width=\"600\">\n</a>\n"}},"__N_SSG":true}