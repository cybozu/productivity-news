{"pageProps":{"post":{"title":"#6 - 2023.02.09","year":"2023","slug":"02-09","content":"<h2><a href=\"https://cybozu.connpass.com/event/268442/\">Cybozu Productivity Weekly 100 回記念</a></h2>\n<p>共有担当: <a href=\"https://twitter.com/miyajan\">@miyajan</a></p>\n<ul>\n<li>生産性向上チームの<a href=\"https://twitter.com/shitimi_613\">平木場さん</a>が毎週 Zenn に投稿している <a href=\"https://zenn.dev/topics/productivityweekly?order=latest\">Productivity Weekly</a> の記事が第 100 回を迎えたので、記念イベントを開催しました🎉</li>\n<li><a href=\"https://www.docswell.com/s/korosuke613/K11X3K-2023-01-25-productivity-weekly-100th-kinen\">Productivity Weekly 100回記念 🎉\u000b〜この2年のふりかえりとか色々〜</a></li>\n<li>参加者のみなさま、お祝いいただきありがとうございました🙏</li>\n</ul>\n<h2><a href=\"https://www.deepl.com/ja/blog/introducing-deepl-write\">文章作成の頼れるアシスタント、AI搭載のDeepL Writeが新登場</a></h2>\n<p>共有担当: <a href=\"https://twitter.com/miyajan\">@miyajan</a></p>\n<ul>\n<li>文法の間違いを修正するだけでなく、言い回しなども提案してくれます</li>\n<li>ベータ版、無料</li>\n<li><a href=\"https://www.deepl.com/ja/privacy\">DeepLの個人情報保護方針</a>によると、DeepL Pro でログインしているユーザーは、DeepL と同様に、DeepL Write で入力したテキストは保存されず学習にも使われないようです</li>\n</ul>\n<h2><a href=\"https://aws.amazon.com/jp/blogs/news/introducing-finch-an-open-source-client-for-container-development/\">コンテナ開発用のオープンソースクライアント「Finch」のご紹介 | Amazon Web Services ブログ</a></h2>\n<p>共有担当: <a href=\"https://twitter.com/ganta0087\">@ganta0087</a></p>\n<ul>\n<li>Amazonがコンテナ開発用のOSSをリリース\n<ul>\n<li><a href=\"https://github.com/runfinch\">https://github.com/runfinch</a></li>\n<li>ライセンスはApache License 2.0</li>\n</ul>\n</li>\n<li>内部ではLima、nerdctl、containerd、BuildKitを利用し、それらをラップするmacOSネイティブのクライアントを提供</li>\n<li>FinchをAWSのサービスと併用する際に、AWSのサポートプランに基づいてサポートを受けられる</li>\n<li><code>finch</code>コマンドでVMを作成してその上でコンテナの実行などを行う</li>\n<li><code>finch</code>コマンドはnerdctlとも統合されており、Docker CLIライクな操作ができる</li>\n<li>フィードバックを得るために基本的な機能しか実装されていない段階でリリースされている\n<ul>\n<li>今後Windows、Linuxへの対応や性能向上などが予定されている</li>\n<li><a href=\"https://github.com/runfinch/finch/blob/v0.3.0/pkg/config/config.go#L30-L38\">設定もまだVMのCPUとメモリ、ホームディレクトリ以外のマウントパスの追加しか対応していない</a></li>\n<li><a href=\"https://github.com/runfinch/finch/blob/v0.3.0/go.mod#L8\">Virtualization Frameworkに対応しているバージョンのLimaを使っている</a>が、VMのオプションも設定できないためQEMUが使われる</li>\n</ul>\n</li>\n</ul>\n<h2><a href=\"https://blog.1password.com/shell-plugins/\">Unlock any CLI using Biometrics with 1Password Shell Plugins | 1Password</a></h2>\n<p>共有担当: <a href=\"https://twitter.com/ganta0087\">@ganta0087</a></p>\n<ul>\n<li>1Password CLIのShell Pluginによる各種CLIへシークレットを渡すしくみの紹介</li>\n<li>例えば、GitHub CLIで利用するパーソナルアクセストークンを1Passwordに保存しておき、<code>gh</code>コマンド実行時にそれを参照するようにできる\n<ul>\n<li>GitHub CLI側でOAuthトークンも対応しているが、トークンを安全に保存しておきたい場合や、OAuthのスコープ外のAPIを使いたくてPATを使うときに有用</li>\n</ul>\n</li>\n<li><code>op plugin list</code>で対応ツールが一覧できる\n<ul>\n<li>GitHubの他にAWS、CircleCI、MySQLやPostgreSQLなども対応している</li>\n<li><a href=\"https://developer.1password.com/docs/cli/shell-plugins/aws/#optional-set-up-multi-factor-authentication\">AWS CLIの場合はOTPにも対応</a>している</li>\n</ul>\n</li>\n<li>原理としては、ユーザーがシェル起動時にプラグイン用のスクリプトを読むように設定、そのスクリプト内で元のコマンドで1Password CLIへのエイリアスを張っている\n<ul>\n<li>例: <code>alias gh=\"op plugin run -- gh\"</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1>We are hiring</h1>\n<a href=\"https://note.com/cybozu_dev/n/n1c1b44bf72f6\">\n<img src=\"https://user-images.githubusercontent.com/471182/156986297-b189ef3d-98d3-4490-af5c-007a4ab47e5e.png\" alt=\"サイボウズの開発者の生産性を上げる「生産性向上チーム」とは！？\" width=\"600\">\n</a>\n"}},"__N_SSG":true}