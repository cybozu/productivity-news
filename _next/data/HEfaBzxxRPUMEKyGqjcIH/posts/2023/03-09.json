{"pageProps":{"post":{"title":"#7 - 2023.03.09","year":"2023","slug":"03-09","content":"<h2><a href=\"https://github.blog/changelog/2023-02-08-pull-request-merge-queue-public-beta/\">Pull request merge queue (public beta) | GitHub Changelog</a></h2>\n<p>共有担当: <a href=\"https://github.com/korosuke613\">@korosuke613</a></p>\n<ul>\n<li>GitHub において、pull request merge queue がパブリックベータになりました\n<ul>\n<li><a href=\"https://zenn.dev/korosuke613/articles/productivity-weekly-20211108#pull-request-merge-queue-limited-beta-%7C-github-changelog\">一昨年のプライベートベータ</a>から約一年かかりましたね</li>\n</ul>\n</li>\n<li>マージキューはプルリクエストが頻繁に飛び交うリポジトリにおいて特に有効です。プルリクエストをすぐにマージするのではなく、キューに溜め込み、溜まったプルリクエストをまとめたブランチを作り、CI にかけマージするという手法になります\n<ul>\n<li>マージキューがなぜ嬉しいかについては<a href=\"https://zenn.dev/korosuke613/articles/productivity-weekly-20211108#pull-request-merge-queue-limited-beta-%7C-github-changelog\">過去の記事</a>を参照ください</li>\n</ul>\n</li>\n<li>現時点では GHEC、Organization のみ利用可能であるため、個人のリポジトリでの利用はできません\n<ul>\n<li>将来的に個人でも使えるのかは分かりませんが、個人で使うメリットはあまりなさそうです（renovate などのプルリクエストをまとめてマージするのに便利かも？）</li>\n</ul>\n</li>\n<li>実際に会社のリポジトリで試してみました\n<ul>\n<li><a href=\"https://zenn.dev/link/comments/4e39f8e985babb\">GitHubのPull request merge queueを試す</a></li>\n</ul>\n</li>\n<li>次のリンクの人の方がもっとわかりやすくまとめてくれています\n<ul>\n<li><a href=\"https://medium.com/@ronnnnn_jp/github-%E3%81%AE-merge-queue-%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%81%A6%E5%88%86%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8-5c5b94cf477b\">GitHub の merge queue を試してみて分かったこと | by Seiya Kokushi | Feb, 2023 | Medium</a></li>\n<li>特に、merge queue に詰められた後のコミット順の項目は非常に分かりやすく、参考になります</li>\n</ul>\n</li>\n<li>感想としては、結構複雑な仕組みなので、仕様をきちんと知らないと想定通りの利用が難しいという印象です。しかし、使いこなせればとても強力だと思います。皆さんも大規模リポジトリで有効活用してみてください</li>\n</ul>\n<hr>\n<h1>We are hiring</h1>\n<a href=\"https://note.com/cybozu_dev/n/n1c1b44bf72f6\">\n<img src=\"https://user-images.githubusercontent.com/471182/156986297-b189ef3d-98d3-4490-af5c-007a4ab47e5e.png\" alt=\"サイボウズの開発者の生産性を上げる「生産性向上チーム」とは！？\" width=\"600\">\n</a>\n"}},"__N_SSG":true}